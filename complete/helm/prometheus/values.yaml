alertmanager:
  enabled: true
  config:
    global: {}
    route:
      receiver: default-receiver
      group_wait: 10s
      group_interval: 5m
      repeat_interval: 3h
    receivers:
      - name: default-receiver
    templates:
      - /etc/alertmanager/*.tmpl
  service:
    type: ClusterIP

server:
  fullnameOverride: prometheus-server
  replicaCount: 1

  image:
    tag: v2.54.0

  podLabels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: prometheus
    app.kubernetes.io/version: v2.54.0

  persistentVolume:
    enabled: true
    size: 8Gi

  service:
    type: ClusterIP
    port: 80

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

  extraConfigmapMounts:
    - name: prometheus-config
      mountPath: /etc/config
      configMap: prometheus-server
      readOnly: true

  configMaps:
    - prometheus-server

  extraScrapeConfigs:
    - job_name: 'prometheus'
      scrape_interval: 1m
      scrape_timeout: 10s
      static_configs:
        - targets:
            - localhost:9090

    - job_name: 'kubernetes-apiservers'
      kubernetes_sd_configs:
        - role: endpoints
      scheme: https
      tls_config:
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

    # Outros jobs como nodes, cadvisor, service-endpoints etc podem ser adicionados aqui tamb√©m conforme necessidade

kubeStateMetrics:
  enabled: false

nodeExporter:
  enabled: false

pushgateway:
  enabled: false

rbac:
  create: true

serviceAccounts:
  server:
    create: true
    name: ""